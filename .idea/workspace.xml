<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="a9d1de7b-e7fc-4838-a98a-47422bf59715" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ExternalProjectsData">
    <projectState path="$PROJECT_DIR$">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/common">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/order">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/payment">
      <ProjectState />
    </projectState>
    <projectState path="$PROJECT_DIR$/shipment">
      <ProjectState />
    </projectState>
  </component>
  <component name="ExternalProjectsManager">
    <system id="GRADLE">
      <state>
        <task path="$PROJECT_DIR$">
          <activation />
        </task>
        <projects_view>
          <tree_state>
            <expand />
            <select />
          </tree_state>
        </projects_view>
      </state>
    </system>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Enum" />
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2Vjr3QGN5qjhMzgAlqv5ZLY4q83" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RequestMappingsPanelOrder0&quot;: &quot;0&quot;,
    &quot;RequestMappingsPanelOrder1&quot;: &quot;1&quot;,
    &quot;RequestMappingsPanelWidth0&quot;: &quot;75&quot;,
    &quot;RequestMappingsPanelWidth1&quot;: &quot;75&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;corretto-19&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,
    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,
    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;project.propVCSSupport.DirectoryMappings&quot;,
    &quot;spring.configuration.checksum&quot;: &quot;b11b4f3df74da2c22640ee5688432773&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Gradle.OrderApplicationTests.testIntegrationOrder_whenOrderCreationFailed_thenThrowTemporalException">
    <configuration name="OrderApplicationTests" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":order:test" />
            <option value="--tests" />
            <option value="&quot;com.marcura.order.OrderApplicationTests&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="OrderApplicationTests.testIntegrationOrder_whenOrderCreationFailed_thenThrowTemporalException" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":order:test" />
            <option value="--tests" />
            <option value="&quot;com.marcura.order.OrderApplicationTests.testIntegrationOrder_whenOrderCreationFailed_thenThrowTemporalException&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="OrderApplicationTests.testIntegrationOrder_whenPaymentFailed_thenThrowTemporalException" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":order:test" />
            <option value="--tests" />
            <option value="&quot;com.marcura.order.OrderApplicationTests.testIntegrationOrder_whenPaymentFailed_thenThrowTemporalException&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="OrderApplicationTests.testIntegrationOrder_whenShipmentFailed_thenThrowTemporalException" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":order:test" />
            <option value="--tests" />
            <option value="&quot;com.marcura.order.OrderApplicationTests.testIntegrationOrder_whenShipmentFailed_thenThrowTemporalException&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="OrderApplicationTests.testOrderCreation_success" type="GradleRunConfiguration" factoryName="Gradle" temporary="true">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" value="$PROJECT_DIR$" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" value="" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list>
            <option value=":order:test" />
            <option value="--tests" />
            <option value="&quot;com.marcura.order.OrderApplicationTests.testOrderCreation_success&quot;" />
          </list>
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <ExternalSystemDebugServerProcess>false</ExternalSystemDebugServerProcess>
      <ExternalSystemReattachDebugProcess>true</ExternalSystemReattachDebugProcess>
      <DebugAllEnabled>false</DebugAllEnabled>
      <RunAsTest>true</RunAsTest>
      <method v="2" />
    </configuration>
    <configuration name="OrderApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="order-payment-workflow.order.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.marcura.order.OrderApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="PaymentApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="order-payment-workflow.payment.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.marcura.payment.PaymentApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ShipmentApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" nameIsGenerated="true">
      <module name="order-payment-workflow.shipment.main" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.marcura.shipment.ShipmentApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="Gradle.OrderApplicationTests" />
      <item itemvalue="Gradle.OrderApplicationTests.testIntegrationOrder_whenOrderCreationFailed_thenThrowTemporalException" />
      <item itemvalue="Gradle.OrderApplicationTests.testIntegrationOrder_whenPaymentFailed_thenThrowTemporalException" />
      <item itemvalue="Gradle.OrderApplicationTests.testIntegrationOrder_whenShipmentFailed_thenThrowTemporalException" />
      <item itemvalue="Gradle.OrderApplicationTests.testOrderCreation_success" />
      <item itemvalue="Spring Boot.ShipmentApplication" />
      <item itemvalue="Spring Boot.PaymentApplication" />
      <item itemvalue="Spring Boot.OrderApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Gradle.OrderApplicationTests.testIntegrationOrder_whenOrderCreationFailed_thenThrowTemporalException" />
        <item itemvalue="Gradle.OrderApplicationTests" />
        <item itemvalue="Gradle.OrderApplicationTests.testIntegrationOrder_whenShipmentFailed_thenThrowTemporalException" />
        <item itemvalue="Gradle.OrderApplicationTests.testIntegrationOrder_whenPaymentFailed_thenThrowTemporalException" />
        <item itemvalue="Gradle.OrderApplicationTests.testOrderCreation_success" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="a9d1de7b-e7fc-4838-a98a-47422bf59715" name="Changes" comment="" />
      <created>1695360133536</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1695360133536</updated>
      <workItem from="1695360134514" duration="15450000" />
      <workItem from="1695608421427" duration="23715000" />
      <workItem from="1695697243393" duration="17777000" />
      <workItem from="1695781801505" duration="15924000" />
      <workItem from="1695867520991" duration="19573000" />
      <workItem from="1695956007313" duration="9298000" />
      <workItem from="1696162033842" duration="653000" />
      <workItem from="1696215104059" duration="4779000" />
      <workItem from="1696227165773" duration="7100000" />
      <workItem from="1696300124408" duration="12563000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/common" />
      <path value="$PROJECT_DIR$/order" />
      <path value="$PROJECT_DIR$/payment" />
      <path value="$PROJECT_DIR$/shipment" />
    </ignored-roots>
  </component>
</project>